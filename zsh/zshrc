[[ -f "$HOME/.zshrc-pre" ]] && source "$HOME/.zshrc-pre"

[[ -x /opt/homebrew/bin/brew ]] && eval $(/opt/homebrew/bin/brew shellenv)
[[ -x /opt/homebrew/bin/gcc-11 ]] && export CC=/opt/homebrew/bin/gcc-11
[[ -f /opt/dev/sh/chruby/chruby.sh ]] && { type chruby >/dev/null 2>&1 || chruby () { source /opt/dev/sh/chruby/chruby.sh; chruby "$@"; } }

export PATH=/opt/homebrew/bin:$PATH

# pass unmatched globs verbatim to the command, allowing things like `HEAD^` to work
setopt NO_NOMATCH

setopt promptsubst
setopt inc_append_history
setopt share_history

HISTSIZE=1000
SAVEHIST=50000
HISTFILE=${XDG_STATE_HOME:-$HOME/.local/state}/.zsh_history

export CLICOLOR=1

# Install & Setup zinit {{{ 

if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# }}}
# Annexes (extensions) for zinit {{{ 

# Annexes for zinit
zi light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

# }}}
# Load my config {{{ 
zi ice as-id"local" lucid wait
zi load "${HOME}/dotfiles/zsh/plugins"

zi ice light-mode lucid link wait has'tmux'
zi snippet "$HOME/dotfiles/zsh/snippets/zsh-tmux-auto-title.plugin.zsh"

# }}}
# Load other plugins {{{

function zvm_after_lazy_keybindings() {
    zvm_bindkey vicmd 'k' history-substring-search-up
    zvm_bindkey vicmd 'j' history-substring-search-down
    zvm_bindkey vicmd '[A' history-substring-search-up
    zvm_bindkey vicmd '[B' history-substring-search-down

    zvm_bindkey '^A' beginning-of-line
    zvm_bindkey '^[OH' beginning-of-line
    zvm_bindkey '^[[1~' beginning-of-line

    zvm_bindkey '^E' end-of-line
    zvm_bindkey '^[OF' end-of-line
    zvm_bindkey '^[[4~' end-of-line
}

zi ice depth=1 atload'
    ZVM_LINE_INIT_MODE=$ZVM_MODE_INSERT
    '
# TODO: causes VS Code to end up in that repo???
zi light jeffreytse/zsh-vi-mode

zi wait lucid for \
  atinit"zicompinit; zicdreplay" \
      zdharma-continuum/fast-syntax-highlighting \
  blockf atpull'zinit creinstall -q .' \
      zsh-users/zsh-completions

zinit ice wait"0a" lucid atload'
    bindkey "$terminfo[kcuu1]" history-substring-search-up;
    bindkey "$terminfo[kcud1]" history-substring-search-down;
    bindkey "^[[A" history-substring-search-up;
    bindkey "^[[B" history-substring-search-down;
    '
zinit load zsh-users/zsh-history-substring-search

zinit ice wait"0b" lucid atload"_zsh_autosuggest_start"
zinit load zsh-users/zsh-autosuggestions

zinit ice light
zinit snippet 'https://github.com/wez/wezterm/raw/main/assets/shell-integration/wezterm.sh'

# Set up starship theme
export STARSHIP_CONFIG="${STARSHIP_CONFIG:-${HOME}/dotfiles/starship.toml}"
zi ice as"command" from"gh-r" \
          atclone"./starship init zsh > init.zsh; ./starship completions zsh > _starship" \
          atpull"%atclone" src"init.zsh"
zi light starship/starship

# }}}

[[ -f "$HOME/.zshrc-post" ]] && zi ice light-mode link && zi snippet "$HOME/.zshrc-post"

# vim:foldmethod=marker:foldlevel=0:
